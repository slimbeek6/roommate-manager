{"ast":null,"code":"import _slicedToArray from\"D:\\\\Coding\\\\all-bcs-work\\\\roommate-repo\\\\roommate-tracker\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _objectWithoutProperties from\"D:\\\\Coding\\\\all-bcs-work\\\\roommate-repo\\\\roommate-tracker\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectWithoutProperties.js\";import _toConsumableArray from\"D:\\\\Coding\\\\all-bcs-work\\\\roommate-repo\\\\roommate-tracker\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"D:\\\\Coding\\\\all-bcs-work\\\\roommate-repo\\\\roommate-tracker\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";var _excluded=[\"value\"];import React,{useReducer,createContext,useContext}from\"react\";import{ADD_HOME,DELETE_HOME,GET_HOME}from\"./actions\";import{jsx as _jsx}from\"react/jsx-runtime\";var homeContext=/*#__PURE__*/createContext({username:\"\",HomeId:\"\",loggedIn:true});var Provider=homeContext.Provider;var reducer=function reducer(state,action){switch(action.type){case ADD_HOME:return _objectSpread(_objectSpread({},state),{},{homes:[].concat(_toConsumableArray(state.homes),[action.home])});case GET_HOME:return _objectSpread(_objectSpread({},state),{},{homes:_toConsumableArray(action.homes)});case DELETE_HOME:return _objectSpread(_objectSpread({},state),{},{homes:state.homes.filter(function(home){return home.username!==action.username;})});default:return state;}};var HomeProvider=function HomeProvider(_ref){var _ref$value=_ref.value,value=_ref$value===void 0?[]:_ref$value,props=_objectWithoutProperties(_ref,_excluded);var _useReducer=useReducer(reducer,{users:[]}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(Provider,_objectSpread({value:[state,dispatch]},props));};var useHomeContext=function useHomeContext(){return useContext(homeContext);};export{HomeProvider,useHomeContext};","map":{"version":3,"sources":["D:/Coding/all-bcs-work/roommate-repo/roommate-tracker/src/utils/LoginState.js"],"names":["React","useReducer","createContext","useContext","ADD_HOME","DELETE_HOME","GET_HOME","homeContext","username","HomeId","loggedIn","Provider","reducer","state","action","type","homes","home","filter","HomeProvider","value","props","users","dispatch","useHomeContext"],"mappings":"uoBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,aAA5B,CAA2CC,UAA3C,KAA4D,OAA5D,CACA,OAASC,QAAT,CAAmBC,WAAnB,CAAgCC,QAAhC,KAAgD,WAAhD,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGL,aAAa,CAAC,CAC9BM,QAAQ,CAAE,EADoB,CAE9BC,MAAM,CAAE,EAFsB,CAG9BC,QAAQ,CAAE,IAHoB,CAAD,CAAjC,CAMA,GAAQC,CAAAA,QAAR,CAAqBJ,WAArB,CAAQI,QAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAUC,KAAV,CAAiBC,MAAjB,CAAyB,CACrC,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKX,CAAAA,QAAL,CACI,sCAAWS,KAAX,MACIG,KAAK,8BAAMH,KAAK,CAACG,KAAZ,GAAmBF,MAAM,CAACG,IAA1B,EADT,GAGJ,IAAKX,CAAAA,QAAL,CACI,sCAAWO,KAAX,MACIG,KAAK,oBAAMF,MAAM,CAACE,KAAb,CADT,GAGJ,IAAKX,CAAAA,WAAL,CACI,sCAAWQ,KAAX,MACIG,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAmB,SAACD,IAAD,CAAU,CAChC,MAAOA,CAAAA,IAAI,CAACT,QAAL,GAAkBM,MAAM,CAACN,QAAhC,CACH,CAFM,CADX,GAKJ,QACI,MAAOK,CAAAA,KAAP,CAhBR,CAkBH,CAnBD,CAqBA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA2B,qBAAzBC,KAAyB,CAAzBA,KAAyB,qBAAlB,EAAkB,YAAXC,KAAW,0CAC5C,gBAA0BpB,UAAU,CAACW,OAAD,CAAU,CAC1CU,KAAK,CAAE,EADmC,CAAV,CAApC,4CAAOT,KAAP,iBAAcU,QAAd,iBAIA,mBAAO,KAAC,QAAD,gBAAU,KAAK,CAAE,CAACV,KAAD,CAAQU,QAAR,CAAjB,EAAuCF,KAAvC,EAAP,CACH,CAND,CAQA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAW,CAC9B,MAAOrB,CAAAA,UAAU,CAACI,WAAD,CAAjB,CACH,CAFD,CAIA,OAAQY,YAAR,CAAsBK,cAAtB","sourcesContent":["import React, { useReducer, createContext, useContext} from \"react\";\r\nimport { ADD_HOME, DELETE_HOME, GET_HOME } from \"./actions\";\r\n\r\nconst homeContext = createContext({\r\n    username: \"\",\r\n    HomeId: \"\",\r\n    loggedIn: true\r\n});\r\n\r\nconst { Provider } = homeContext;\r\n\r\nconst reducer = function (state, action) {\r\n    switch(action.type) {\r\n        case ADD_HOME:\r\n            return {...state, \r\n                homes: [...state.homes, action.home]\r\n            };\r\n        case GET_HOME:\r\n            return {...state, \r\n                homes: [...action.homes]\r\n            };\r\n        case DELETE_HOME:\r\n            return {...state,\r\n                homes: state.homes.filter((home) => {\r\n                    return home.username !== action.username;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst HomeProvider = ({value =[], ...props}) => {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        users: []\r\n    });\r\n\r\n    return <Provider value={[state, dispatch]}{...props} />;\r\n};\r\n\r\nconst useHomeContext = function() {\r\n    return useContext(homeContext);\r\n}\r\n\r\nexport {HomeProvider, useHomeContext};"]},"metadata":{},"sourceType":"module"}