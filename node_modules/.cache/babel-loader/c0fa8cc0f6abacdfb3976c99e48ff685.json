{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asldf\\\\Desktop\\\\all-bcs-work\\\\roommate-tracker\\\\roommate-manager\\\\src\\\\utils\\\\LoginState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, createContext, useContext } from \"react\";\nimport { ADD_HOME, DELETE_HOME, GET_HOME } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst homeContext = /*#__PURE__*/createContext({\n  username: \"\",\n  HomeId: \"\",\n  loggedIn: true\n});\nconst {\n  Provider\n} = homeContext;\n\nconst reducer = function (state, action) {\n  switch (action.type) {\n    case ADD_HOME:\n      return { ...state,\n        homes: [...state.homes, action.home]\n      };\n\n    case GET_HOME:\n      return { ...state,\n        homes: [...action.homes]\n      };\n\n    case DELETE_HOME:\n      return { ...state,\n        homes: state.homes.filter(home => {\n          return home.username !== action.username;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst HomeProvider = _ref => {\n  _s();\n\n  let {\n    value = [],\n    ...props\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, {\n    users: []\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: [state, dispatch],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(HomeProvider, \"c1sR29Ew2O6SlVEdVBOsrcjyyDk=\");\n\n_c = HomeProvider;\n\nconst useHomeContext = function () {\n  _s2();\n\n  return useContext(homeContext);\n};\n\n_s2(useHomeContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { HomeProvider, useHomeContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeProvider\");","map":{"version":3,"sources":["C:/Users/asldf/Desktop/all-bcs-work/roommate-tracker/roommate-manager/src/utils/LoginState.js"],"names":["React","useReducer","createContext","useContext","ADD_HOME","DELETE_HOME","GET_HOME","homeContext","username","HomeId","loggedIn","Provider","reducer","state","action","type","homes","home","filter","HomeProvider","value","props","dispatch","users","useHomeContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,QAA4D,OAA5D;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,QAAgD,WAAhD;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,CAAC;AAC9BM,EAAAA,QAAQ,EAAE,EADoB;AAE9BC,EAAAA,MAAM,EAAE,EAFsB;AAG9BC,EAAAA,QAAQ,EAAE;AAHoB,CAAD,CAAjC;AAMA,MAAM;AAAEC,EAAAA;AAAF,IAAeJ,WAArB;;AAEA,MAAMK,OAAO,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,QAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AACHG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,IAAxB;AADJ,OAAP;;AAGJ,SAAKX,QAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AACHG,QAAAA,KAAK,EAAE,CAAC,GAAGF,MAAM,CAACE,KAAX;AADJ,OAAP;;AAGJ,SAAKX,WAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AACHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYE,MAAZ,CAAoBD,IAAD,IAAU;AAChC,iBAAOA,IAAI,CAACT,QAAL,KAAkBM,MAAM,CAACN,QAAhC;AACH,SAFM;AADJ,OAAP;;AAKJ;AACI,aAAOK,KAAP;AAhBR;AAkBH,CAnBD;;AAqBA,MAAMM,YAAY,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAACC,IAAAA,KAAK,GAAE,EAAR;AAAY,OAAGC;AAAf,GAA0B;AAC5C,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBrB,UAAU,CAACW,OAAD,EAAU;AAC1CW,IAAAA,KAAK,EAAE;AADmC,GAAV,CAApC;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACV,KAAD,EAAQS,QAAR,CAAjB;AAAA,OAAuCD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAND;;GAAMF,Y;;KAAAA,Y;;AAQN,MAAMK,cAAc,GAAG,YAAW;AAAA;;AAC9B,SAAOrB,UAAU,CAACI,WAAD,CAAjB;AACH,CAFD;;IAAMiB,c;;AAIN,SAAQL,YAAR,EAAsBK,cAAtB","sourcesContent":["import React, { useReducer, createContext, useContext} from \"react\";\nimport { ADD_HOME, DELETE_HOME, GET_HOME } from \"./actions\";\n\nconst homeContext = createContext({\n    username: \"\",\n    HomeId: \"\",\n    loggedIn: true\n});\n\nconst { Provider } = homeContext;\n\nconst reducer = function (state, action) {\n    switch(action.type) {\n        case ADD_HOME:\n            return {...state, \n                homes: [...state.homes, action.home]\n            };\n        case GET_HOME:\n            return {...state, \n                homes: [...action.homes]\n            };\n        case DELETE_HOME:\n            return {...state,\n                homes: state.homes.filter((home) => {\n                    return home.username !== action.username;\n                })\n            };\n        default:\n            return state;\n    }\n};\n\nconst HomeProvider = ({value =[], ...props}) => {\n    const [state, dispatch] = useReducer(reducer, {\n        users: []\n    });\n\n    return <Provider value={[state, dispatch]}{...props} />;\n};\n\nconst useHomeContext = function() {\n    return useContext(homeContext);\n}\n\nexport {HomeProvider, useHomeContext};"]},"metadata":{},"sourceType":"module"}