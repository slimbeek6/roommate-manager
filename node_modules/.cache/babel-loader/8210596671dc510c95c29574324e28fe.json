{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Slim\\\\Desktop\\\\all-bcs-work\\\\roommate-repo\\\\roommate-tracker\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// Import key components and forms\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation\";\nimport Input from \"react-validation\";\nimport CheckButton from \"react-validation/build/buttons\";\nimport { isEmail } from \"validator\";\nimport Header from \"../components/Header\"; // Import Login Auth Services\n\nimport AuthService from \"../services/auth.service\"; // Create functions to validate the inputs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmpty = function (input) {\n  if (!input) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validateEmail = function (input) {\n  if (!isEmail(input)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Please enter a valid email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validateUsername = function (input) {\n  if (input.length < 3 || input.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Username must be between 3 and 40 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validatePassword = function (input) {\n  if (input.length < 6) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Password must be at least 6 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n}; // Create the page for the Registration page, including front end js and html\n\n\nconst Register = () => {\n  _s();\n\n  // Reference links to the form and the button\n  const form = useRef();\n  const checkBtn = useRef(); // Establish state elements for the Home model\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Establish state elements for front end functionality of button and alerts\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Create functions for changing the state element values\n\n  const changeUsername = function (event) {\n    setUsername(event.target.value);\n  };\n\n  const changeEmail = function (event) {\n    setEmail(event.target.value);\n  };\n\n  const changePassword = function (event) {\n    setPassword(event.target.value);\n  }; // Create function that submits the new home model value to the auth service\n\n\n  const registerHome = function (event) {\n    event.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll(); // Send the new values to the auth service\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        setMessage(error.data.message);\n        setSuccessful(false);\n      });\n    }\n\n    ;\n  }; // Return the html for the page itself\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container mx-auto my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile-img-card\",\n        src: \"/assets/img/addUser/addUserICON-96.png\",\n        alt: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: registerHome,\n        ref: form,\n        children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Address or Home Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"username\",\n              value: username,\n              onChange: changeUsername,\n              validations: [validateEmpty, validateUsername]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Master Email for Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"email\",\n              value: email,\n              onChange: changeEmail,\n              validations: [validateEmpty, validateEmail]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"password\",\n              value: password,\n              onChange: changePassword,\n              validations: [validateEmpty, validatePassword]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/assets/img/Login/loginICON-72.png\",\n                alt: \"Login button image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"QDTZJI83i8s07SThg+zrek9n7LI=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Slim/Desktop/all-bcs-work/roommate-repo/roommate-tracker/src/pages/Register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","Header","AuthService","validateEmpty","input","validateEmail","validateUsername","length","validatePassword","Register","form","checkBtn","username","setUsername","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","changeUsername","event","target","value","changeEmail","changePassword","registerHome","preventDefault","current","validateAll","context","_errors","register","then","response","data","error","display"],"mappings":"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","sourcesContent":["// Import key components and forms\r\nimport React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation\";\r\nimport Input from \"react-validation\";\r\nimport CheckButton from \"react-validation/build/buttons\";\r\nimport {isEmail} from \"validator\";\r\nimport Header from \"../components/Header\";\r\n\r\n// Import Login Auth Services\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n// Create functions to validate the inputs\r\nconst validateEmpty = function(input) {\r\n    if(!input) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">This field is required</div>\r\n        );\r\n    };\r\n};\r\n\r\nconst validateEmail = function(input) {\r\n    if(!isEmail(input)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">Please enter a valid email</div>\r\n        );\r\n    };\r\n};\r\n\r\nconst validateUsername = function(input) {\r\n    if(input.length < 3 || input.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">Username must be between 3 and 40 characters</div>\r\n        );\r\n    };\r\n};\r\n\r\nconst validatePassword = function(input) {\r\n    if(input.length < 6) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">Password must be at least 6 characters</div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n// Create the page for the Registration page, including front end js and html\r\nconst Register = () => {\r\n    // Reference links to the form and the button\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    // Establish state elements for the Home model\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // Establish state elements for front end functionality of button and alerts\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // Create functions for changing the state element values\r\n    const changeUsername = function (event) {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const changeEmail = function (event) {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const changePassword = function (event) {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    // Create function that submits the new home model value to the auth service\r\n    const registerHome = function (event) {\r\n        event.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setSuccessful(false);\r\n\r\n        form.current.validateAll();\r\n\r\n        // Send the new values to the auth service\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.register(username, email, password)\r\n            .then((response) => {\r\n                setMessage(response.data.message);\r\n                setSuccessful(true);\r\n            }, (error) =>{\r\n                setMessage(error.data.message);\r\n                setSuccessful(false);\r\n            });\r\n        };\r\n    };\r\n\r\n    // Return the html for the page itself\r\n    return (\r\n    \r\n        <div className=\"col-md-12\">\r\n            {/* <Header/> */}\r\n            <div className=\"card card-container mx-auto my-5\">\r\n\r\n                {/* Branding */}\r\n                <img className=\"profile-img-card\" src=\"/assets/img/addUser/addUserICON-96.png\" alt=\"profile-img\" /> \r\n\r\n                {/* Use the react build form for registration information input */}\r\n                <Form onSubmit={registerHome} ref={form}>\r\n                    {!successful && (\r\n                        <div>\r\n                            {/* Input for the Home model username */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"username\">Address or Home Nickname</label>\r\n                                <Input className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={changeUsername}\r\n                                validations={[validateEmpty, validateUsername]}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Input for the Home model email */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Master Email for Account</label>\r\n                                <Input className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={changeEmail}\r\n                                validations={[validateEmpty, validateEmail]}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Input for the Home model password */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <Input className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={changePassword}\r\n                                validations={[validateEmpty, validatePassword]}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* On submit, return a message. If successful, provide a link to the login page. If failure, send error message */}\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">{message}</div>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a href=\"/login\">\r\n                                    <img src=\"/assets/img/Login/loginICON-72.png\" alt=\"Login button image\" />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}