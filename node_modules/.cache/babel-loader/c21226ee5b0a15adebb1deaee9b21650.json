{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asldf\\\\Desktop\\\\all-bcs-work\\\\roommate-tracker\\\\roommate-manager\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\n// Import key components and forms\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport \"./style.css\"; // Import Login Auth Services\n\nimport AuthService from \"../services/auth.service\"; // Create functions to validate the inputs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmpty = function (input) {\n  if (!input) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validateEmail = function (input) {\n  if (!isEmail(input)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Please enter a valid email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validateUsername = function (input) {\n  if (input.length < 3 || input.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Username must be between 3 and 40 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n};\n\nconst validatePassword = function (input) {\n  if (input.length < 6) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Password must be at least 6 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n}; // Create the page for the Registration page, including front end js and html\n\n\nconst Register = () => {\n  _s();\n\n  // Reference links to the form and the button\n  const form = useRef();\n  const checkBtn = useRef(); // Establish state elements for the Home model\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Establish state elements for front end functionality of button and alerts\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Create functions for changing the state element values\n\n  const changeUsername = function (event) {\n    setUsername(event.target.value);\n  };\n\n  const changeEmail = function (event) {\n    setEmail(event.target.value);\n  };\n\n  const changePassword = function (event) {\n    setPassword(event.target.value);\n  }; // Create function that submits the new home model value to the auth service\n\n\n  const registerHome = function (event) {\n    event.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll(); // Send the new values to the auth service\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        setMessage(error.data.message);\n        setSuccessful(false);\n      });\n    }\n\n    ;\n  }; // Return the html for the page itself\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container mx-auto my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile-img-card\",\n        src: \"/assets/img/addUser/addUserICON-96.png\",\n        alt: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: registerHome,\n        ref: form,\n        children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Address or Home Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"username\",\n              value: username,\n              onChange: changeUsername,\n              validations: [validateEmpty, validateUsername]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Master Email for Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"email\",\n              value: email,\n              onChange: changeEmail,\n              validations: [validateEmpty, validateEmail]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"password\",\n              value: password,\n              onChange: changePassword,\n              validations: [validateEmpty, validatePassword]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/assets/img/Login/loginICON-72.png\",\n                alt: \"Login button image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"QDTZJI83i8s07SThg+zrek9n7LI=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/asldf/Desktop/all-bcs-work/roommate-tracker/roommate-manager/src/pages/Register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","AuthService","validateEmpty","input","validateEmail","validateUsername","length","validatePassword","Register","form","checkBtn","username","setUsername","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","changeUsername","event","target","value","changeEmail","changePassword","registerHome","preventDefault","current","validateAll","context","_errors","register","then","response","data","error","display"],"mappings":"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","sourcesContent":["// Import key components and forms\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport {isEmail} from \"validator\";\nimport \"./style.css\";\n\n// Import Login Auth Services\nimport AuthService from \"../services/auth.service\";\n\n// Create functions to validate the inputs\nconst validateEmpty = function(input) {\n    if(!input) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">This field is required</div>\n        );\n    };\n};\n\nconst validateEmail = function(input) {\n    if(!isEmail(input)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">Please enter a valid email</div>\n        );\n    };\n};\n\nconst validateUsername = function(input) {\n    if(input.length < 3 || input.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">Username must be between 3 and 40 characters</div>\n        );\n    };\n};\n\nconst validatePassword = function(input) {\n    if(input.length < 6) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">Password must be at least 6 characters</div>\n        );\n    };\n};\n\n\n// Create the page for the Registration page, including front end js and html\nconst Register = () => {\n    // Reference links to the form and the button\n    const form = useRef();\n    const checkBtn = useRef();\n\n    // Establish state elements for the Home model\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // Establish state elements for front end functionality of button and alerts\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    // Create functions for changing the state element values\n    const changeUsername = function (event) {\n        setUsername(event.target.value);\n    };\n\n    const changeEmail = function (event) {\n        setEmail(event.target.value);\n    };\n\n    const changePassword = function (event) {\n        setPassword(event.target.value);\n    };\n\n    // Create function that submits the new home model value to the auth service\n    const registerHome = function (event) {\n        event.preventDefault();\n\n        setMessage(\"\");\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        // Send the new values to the auth service\n        if (checkBtn.current.context._errors.length === 0) {\n            AuthService.register(username, email, password)\n            .then((response) => {\n                setMessage(response.data.message);\n                setSuccessful(true);\n            }, (error) =>{\n                setMessage(error.data.message);\n                setSuccessful(false);\n            });\n        };\n    };\n\n    // Return the html for the page itself\n    return (\n    \n        <div className=\"col-md-12\">\n            <div className=\"card card-container mx-auto my-5\">\n\n                {/* Branding */}\n                <img className=\"profile-img-card\" src=\"/assets/img/addUser/addUserICON-96.png\" alt=\"profile-img\" /> \n\n                {/* Use the react build form for registration information input */}\n                <Form onSubmit={registerHome} ref={form}>\n                    {!successful && (\n                        <div>\n                            {/* Input for the Home model username */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Address or Home Nickname</label>\n                                <Input className=\"form-control\"\n                                type=\"text\"\n                                name=\"username\"\n                                value={username}\n                                onChange={changeUsername}\n                                validations={[validateEmpty, validateUsername]}\n                                />\n                            </div>\n\n                            {/* Input for the Home model email */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Master Email for Account</label>\n                                <Input className=\"form-control\"\n                                type=\"text\"\n                                name=\"email\"\n                                value={email}\n                                onChange={changeEmail}\n                                validations={[validateEmpty, validateEmail]}\n                                />\n                            </div>\n\n                            {/* Input for the Home model password */}\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Input className=\"form-control\"\n                                type=\"text\"\n                                name=\"password\"\n                                value={password}\n                                onChange={changePassword}\n                                validations={[validateEmpty, validatePassword]}\n                                />\n                            </div>\n                        \n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* On submit, return a message. If successful, provide a link to the login page. If failure, send error message */}\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">{message}</div>\n                            <div className=\"d-flex justify-content-center\">\n                                <a href=\"/login\">\n                                    <img src=\"/assets/img/Login/loginICON-72.png\" alt=\"Login button image\" />\n                                </a>\n                            </div>\n                        </div>\n                    )}\n                    \n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n        \n    )\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}